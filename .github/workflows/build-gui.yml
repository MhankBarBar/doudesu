name: Build Doudesu GUI Executable

on:
  push:
    branches: [ "master" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-gui:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet-core flet-runtime
        pip install pyinstaller
        pip install requests beautifulsoup4 pillow rich
        pip install tls-client
        pip install .[gui]

    - name: Get tls-client path
      run: |
        python -c "import tls_client; import os; print(f'TLS_CLIENT_PATH={os.path.dirname(tls_client.__file__)}')" >> $GITHUB_ENV
      shell: bash

    - name: Create GUI entry point
      run: |
        echo 'from doudesu.ui.gui import run_gui; run_gui()' > gui_main.py

    - name: Build with PyInstaller
      shell: cmd
      run: |
        python -m PyInstaller --name doudesu.exe --onefile --windowed ^
        --icon doudesu/assets/images/logo.png ^
        --add-data "doudesu/assets;doudesu/assets" ^
        --add-binary "${{ env.TLS_CLIENT_PATH }}/dependencies/tls-client-64.dll;tls_client/dependencies" ^
        --hidden-import flet_core ^
        --hidden-import flet_runtime ^
        --hidden-import requests ^
        --hidden-import bs4 ^
        --hidden-import PIL ^
        --hidden-import rich ^
        --hidden-import tls_client ^
        --hidden-import doudesu.core.doudesu ^
        --hidden-import doudesu.utils.constants ^
        --hidden-import doudesu.utils.converter ^
        --hidden-import doudesu.ui.components.loading ^
        --collect-all doudesu ^
        --collect-all tls_client ^
        gui_main.py

    - name: Get Latest Release
      id: latest_release
      uses: actions/github-script@v6
      with:
        script: |
          const releases = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          if (releases.data.length === 0) return;
          return releases.data[0].tag_name;

    - name: Upload to Latest Release
      if: steps.latest_release.outputs.result != ''
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.latest_release.outputs.result }}
        files: dist/doudesu.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 